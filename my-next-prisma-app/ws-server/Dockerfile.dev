# Development Dockerfile for WebSocket Server
FROM node:20-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat wget
WORKDIR /app

# Install dependencies
COPY package.json package-lock.json* ./
RUN npm ci

# Development image with hot reloading
FROM base AS development
WORKDIR /app

ENV NODE_ENV=development

RUN apk add --no-cache wget

# Copy node_modules from deps stage
COPY --from=deps /app/node_modules ./node_modules
COPY . .

EXPOSE 4000
EXPOSE 9229

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:4000/health || exit 1

# Development command with hot reloading
CMD ["npm", "run", "dev"]
